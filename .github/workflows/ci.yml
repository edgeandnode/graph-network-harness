name: CI

on:
  push:
  pull_request:

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always

jobs:
  # Quick format check
  fmt:
    name: Format Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - run: cargo xtask ci fmt-check

  # Clippy linting
  clippy:
    name: Clippy Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-clippy-${{ hashFiles('**/Cargo.lock') }}
      - run: cargo clippy --workspace --all-targets --all-features -- -D warnings

  # Dependency check
  deny:
    name: Cargo Deny
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: EmbarkStudios/cargo-deny-action@v2
        with:
          command: check

  # Unit tests - fast, no external dependencies
  unit-tests:
    name: Unit Tests
    needs: [fmt, clippy]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, nightly]
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-unit-${{ matrix.rust }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Run unit tests
        run: cargo xtask ci unit-tests
          
      - name: Check documentation
        if: matrix.rust == 'stable'
        run: cargo doc --workspace --no-deps --document-private-items

  # Integration tests with all features
  integration-tests:
    name: Integration Tests
    needs: unit-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
      
      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-integration-${{ hashFiles('**/Cargo.lock') }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          driver-opts: |
            image=moby/buildkit:master
            
      - name: Create test-logs directory
        run: mkdir -p test-logs

      - name: Run integration tests
        run: |
          cargo xtask ci integration-tests 2>&1 | tee test-logs/integration-tests-${{ github.run_id }}.log

      - name: Upload test logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: integration-test-logs-${{ github.run_id }}
          path: test-logs/
          retention-days: 7

  # Summary check
  ci-success:
    name: CI Success
    if: always()
    needs: [fmt, clippy, deny, unit-tests, integration-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Check all jobs
        run: |
          if [[ "${{ contains(needs.*.result, 'failure') }}" == "true" ]]; then
            echo "One or more jobs failed"
            exit 1
          else
            echo "All jobs succeeded"
          fi